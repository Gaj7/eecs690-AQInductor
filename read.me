How to use this program:
  1. Compile the program from the linux terminal with the "make" command
    A. You can also use the "make clean" command to remove all object files and
       the "make clean-output" command to remove all output files (this command
       assumes input/output files reside in a subfolder "data").
  2. Run the program with "./project"
    A. You can run with launch option "debug" to enable console debug logging

------------------------------------------------------------------------------------
TODO:
- convert numbers to symbols/ranges
- implement generation of rules without negation
- select maxstar by best (most cases covered)

- after core functionality is done, might need to work on optimization
  - I imagine switching complex vectors to queues would greatly reduce complexity of simplify() as a result of not having to call erase()
  - maybe make star store index of attitude rather than name (made me loop a couple times through attitudes)
  - rework Star::simplify() such that elements can be checked right before being added rather than at the end
  - bottleneck: sets that get bloated af, seems like it happens in partialStar function before reduced. Disjunction on thick sets is super costly

COMPLETED:
- fix isCovered and re-add appropriate checks - seems good now
- make star concat(union) not add redundant entries - looks like its working - could use more tests though
- calc if dataset is consistent (will this effect aq?) - seems to be working
